{"version":3,"sources":["forms/AddUserForm.js","forms/EditUserForm.js","tables/UserTable.js","App.js","index.js"],"names":["AddUserForm","props","initialFormState","id","name","username","desc","useState","user","setUser","handleInputChange","event","currentTarget","value","onSubmit","preventDefault","addUser","type","onChange","EditUserForm","currentUser","useEffect","target","updateUser","onClick","setEditing","className","UserTable","users","length","map","editRow","window","confirm","deleteUser","colSpan","App","setUsers","editing","setCurrentUser","updatedUser","savePhoto","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6115766.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst AddUserForm = props => {\n  const initialFormState = { id: null, name: '', username: '', desc: '' }\n  const [user, setUser] = useState(initialFormState)\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget\n    setUser({ ...user, [name]: value })\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    if (!user.name || !user.username || !user.desc) return\n\n    // вызываем addUser из хука из App\n    props.addUser(user)\n    // обнуляем форму, с помощью setUser функции\n    // которая у нас взята из хука в данном компоненте [1]\n    setUser(initialFormState)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={user.name}\n        onChange={handleInputChange}\n      />\n      <label>Username</label>\n      <input\n        type=\"text\"\n        name=\"username\"\n        value={user.username}\n        onChange={handleInputChange}\n      />\n      <label>Desc</label>\n      <input\n        type=\"text\"\n        name=\"desc\"\n        value={user.desc}\n        onChange={handleInputChange}\n      />\n      <button>Add new user</button>\n    </form>\n  )\n}\n\nexport { AddUserForm }\n","import React, { useState, useEffect } from 'react'\n\nconst EditUserForm = props => {\n  const [user, setUser] = useState(props.currentUser)\n\n  // используем effect-hook\n  useEffect(\n    () => {\n      // вызывай данную функцию\n      setUser(props.currentUser)\n    },\n    [props] // всегда, если изменились props\n  )\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n\n    setUser({ ...user, [name]: value })\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    if (!user.name || !user.username || !user.desc) return\n\n    props.updateUser(user.id, user)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={user.name}\n        onChange={handleInputChange}\n      />\n      <label>Username</label>\n      <input\n        type=\"text\"\n        name=\"username\"\n        value={user.username}\n        onChange={handleInputChange}\n      />\n      <label>Desc</label>\n      <input\n        type=\"text\"\n        name=\"desc\"\n        value={user.desc}\n        onChange={handleInputChange}\n      />\n      <button>Update user</button>\n      <button\n        onClick={() => props.setEditing(false)}\n        className=\"button muted-button\"\n      >\n        Cancel\n      </button>\n    </form>\n  )\n}\n\nexport { EditUserForm }\n","import React from 'react'\n\nconst UserTable = props => {\n  const handleDeleteUser = id => {\n    let answer = window.confirm('Are you sure?')\n\n    if (answer) {\n      props.deleteUser(id)\n    }\n  }\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Username</th>\n          <th>Desc</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.users.length > 0 ? (\n          props.users.map(user => (\n            <tr key={user.id}>\n              <td>{user.name}</td>\n              <td>{user.username}</td>\n              <td>{user.desc}</td>\n              <td>\n                {/* добавили обработку на клик */}\n                <button\n                  onClick={() => {\n                    props.editRow(user)\n                  }}\n                  className=\"button muted-button\"\n                >\n                  Edit\n                </button>\n                <button\n                  className=\"button muted-button\"\n                  onClick={() => handleDeleteUser(user.id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={3}>No users</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport { UserTable }\n","import React, { useState } from 'react'\nimport { AddUserForm } from './forms/AddUserForm'\nimport { EditUserForm } from './forms/EditUserForm'\nimport { UserTable } from './tables/UserTable'\nimport './App.css'\n\nconst App = (props) => {\n  const usersData = [\n    { id: 1, name: 'Superman', username: 'Clark Kent', desc: `he was born Kal-El on the planet Krypton, before being rocketed to\n    Earth as an infant by his scientist father Jor-El, moments before Krypton's destruction...`, },\n    { id: 2, name: 'Spider', username: 'Parker', desc: 'some desc' },\n  ]\n\n  const [users, setUsers] = useState(usersData)\n  // флаг editing - изначально false, функция установки флага\n  const [editing, setEditing] = useState(false)\n  // начальное значение для формы редактирования\n  // так как мы не знаем, кто редактируется - пустые поля\n  const initialFormState = { id: null, name: '', username: '', desc: '' }\n  // значение \"текущий пользователь на редактировании\" + функция установки этого значения\n  const [currentUser, setCurrentUser] = useState(initialFormState)\n\n  const addUser = user => {\n    user.id = users.length + 1\n    setUsers([...users, user])\n  }\n\n  const deleteUser = id => {\n    setEditing(false)\n    setUsers(users.filter(user => user.id !== id))\n  }\n\n  // обновление пользователя\n  const updateUser = (id, updatedUser) => {\n    // когда мы готовы обновить пользователя, ставим флажок editing в false\n    setEditing(false)\n    // и обновляем пользователя, если нашли его по id\n    setUsers(users.map(user => (user.id === id ? updatedUser : user)))\n  }\n\n  // редактирование пользователя\n  const editRow = user => {\n    // готовы редактировать - флажок в true\n    setEditing(true)\n    // устанавливаем значения полей для формы редактирования\n    // на основании выбранного \"юзера\"\n    setCurrentUser({ id: user.id, name: user.name, username: user.username, desc: user.desc })\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>CRUD</h1>\n      <div className=\"flex-row\">\n        <div className=\"flex-large\">\n          {/* редактируем ? рисуй форму редактирования, иначе - форму добавления */}\n          {editing ? (\n            <div>\n              <h2>Edit user</h2>\n              <EditUserForm\n                editing={editing}\n                setEditing={setEditing}\n                currentUser={currentUser}\n                updateUser={updateUser}\n              />\n            </div>\n          ) : (\n            <div>\n              <h2>Add user</h2>\n              <AddUserForm addUser={addUser} savePhoto={props.savePhoto} />\n            </div>\n          )}\n        </div>\n        <div className=\"flex-large\">\n          <h2>View users</h2>\n          {/* передаем editRow */}\n          <UserTable users={users} editRow={editRow} deleteUser={deleteUser} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { App }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}